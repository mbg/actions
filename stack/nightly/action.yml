name: "Stack: Nightly Build"
description: "Build with the nightly Stack resolver"
author: "Michael B. Gale"
inputs:
  project-directory:
    required: false
    description: "The path to the root directory of the project (default: github.workspace)"
    default: ${{ github.workspace }}
  stack-version:
    required: false
    description: "The version of Stack to use (default: latest)"
    default: "latest"
  create-issue:
    required: false
    description: "Whether to create an issue if the workflow fails (default: false)"
    default: "false"
  issue-events:
    required: false
    description: ""
    default: "['schedule']"
runs:
  using: "composite"
  steps:
    - name: "Install Stack"
      uses: haskell-actions/setup@v2
      id: install-haskell
      with:
        stack-no-global: true
        enable-stack: true
        stack-version: ${{ inputs.stack-version }}

    - name: Initialise stack.yaml with the nightly snapshot
      shell: bash
      working-directory: ${{ inputs.project-directory }}
      run: |
        rm -f stack.yaml && stack init --resolver nightly

    - name: Cache .stack folder
      id: cache-stack
      uses: actions/cache@v4
      with:
        path: ${{ steps.install-haskell.outputs.stack-root }}
        key: stack-nightly-${{ runner.os }}-${{ hashFiles(format('{0}/stack.yaml', inputs.project-directory)) }}-${{ hashFiles(format('{0}/*.cabal', inputs.project-directory)) }}
        restore-keys: |
          stack-nightly-${{ runner.os }}-${{ hashFiles(format('{0}/stack.yaml', inputs.project-directory)) }}-

    - name: Build and test with the nightly snapshot
      shell: bash
      working-directory: ${{ inputs.project-directory }}
      run: |
        stack build --resolver nightly --haddock --test --bench --no-run-benchmarks

    - name: "Create issue"
      shell: bash
      if: |
        failure() &&
        contains(fromJSON(inputs.issue-events), github.event_name) &&
        inputs.create-issue != 'false'
      run: |
        previous_issue_number=$(gh issue list \
            --label "stackage-nightly-failure" \
            --json number \
            --jq '.[0].number')
          if [[ -n $previous_issue_number ]]; then
            # don't create a new issue if there's already one
            exit 0
          fi

        gh issue create \
          --label "stackage-nightly-failure" \
          --title "Stackage Nightly build failed" \
          --body "The workflow at ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} failed"
      env:
        GH_TOKEN: ${{ github.token }}
