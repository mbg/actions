name: "Stack: Build"
description: "Build with a Stack resolver"
author: "Michael B. Gale"
inputs:
  project-directory:
    required: false
    description: "The path to the root directory of the project (default: github.workspace)"
    default: ${{ github.workspace }}
  stack-version:
    required: false
    description: "The version of Stack to use (default: latest)"
    default: "latest"
  resolver:
    required: false
    description: "The basename of the Stack configuration file to use"
    default: "stack"
  upload-docs:
    required: false
    description: "Whether to upload the generated documentation files as a build artifact."
    default: "false"
runs:
  using: "composite"
  steps:
    - name: "Install Stack"
      uses: haskell-actions/setup@v2
      id: install-haskell
      with:
        stack-no-global: true
        enable-stack: true
        stack-version: ${{ inputs.stack-version }}

    - name: Cache .stack folder
      id: cache-stack
      uses: actions/cache@v4
      with:
        path: ${{ steps.install-haskell.outputs.stack-root }}
        key: ${{ runner.arch }}-${{ runner.os }}-${{ inputs.resolver }}-${{ hashFiles(format('{0}/{1}.yaml', inputs.project-directory, inputs.resolver)) }}-${{ hashFiles(format('{0}/*.cabal', inputs.project-directory)) }}
        restore-keys: |
          ${{ runner.arch }}-${{ runner.os }}-${{ inputs.resolver }}-${{ hashFiles(format('{0}/{1}.yaml', inputs.project-directory, inputs.resolver)) }}-
          ${{ runner.arch }}-${{ runner.os }}-${{ inputs.resolver }}-

    - name: Install dependencies
      shell: bash
      working-directory: ${{ inputs.project-directory }}
      run: |
        stack --stack-yaml=${{ inputs.resolver }}.yaml --no-terminal build --test --haddock --only-dependencies --fast

    - name: Build
      shell: bash
      working-directory: ${{ inputs.project-directory }}
      run: |
        stack --stack-yaml=${{ inputs.resolver }}.yaml --no-terminal build --fast \
          --test --no-run-tests \
          --haddock --haddock-arguments='-odocs'

    - name: Upload documentation
      if: inputs.upload-docs == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: docs-${{ inputs.resolver }}
        path: ${{ inputs.project-directory }}/docs/

    - name: Test
      shell: bash
      working-directory: ${{ inputs.project-directory }}
      run: stack --stack-yaml=${{ inputs.resolver }}.yaml --no-terminal test --fast
